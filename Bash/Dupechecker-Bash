#!/bin/bash
#dupechecker
#Finds duplicate files based on md5
#by me

##CONSTANTS
recursive="-maxdepth 1" #defaults to not recursive
directory=$(pwd)

##FUNCTIONS
function Get_list() {
  z=$#
  for ((n=1;n<=$z;n++)); do
    args="$args -name \"$1\""
    if [[ 1 < $# ]]; then 
      args="$args -o"
    fi
    shift 1
  done
  eval find $directory $recursive -type f "$args"
}

function Hash_check() {
  file_hash=$(md5sum $1)
  for hash in "${hash_array[@]}"; do
    if [[ ${hash%  *} = ${file_hash%  *} ]]; then
      return 0
    fi
  done
  hash_array[${#hash_array[@]}]="$file_hash" # hash_array+=("$file_hash") reqs. bash >= Bash 3.1
  return 1
}

while getopts ":r" OPTION; do
  case $OPTION in  
    r) 
      recursive=""
      shift $((OPTIND-1)); OPTIND=1  # shift $((OPTIND-1)); == shift 1 , just for coherence...
    ;;
    \?)
      echo "./dupechecker [options] PATH \"FILES1\" \"FILES2\""
      echo "Put FILES* expressions in quotes plox, yes globbing works.. uhmm should"
      exit 1	
    ;;
  esac
done

##MAIN
if [[ ! -z $@ ]] && [[ -d $1 ]]; then
  directory=$1
  shift 1
fi

old_IFS="$IFS"
IFS='\
'
for file in $(Get_list "$@"); do
  if Hash_check $file; then
    echo "$file COLLISION $hash"
    echo "collision $file" #rm $file
  else
    echo $file 
  fi
done
IFS="$old_IFS"






