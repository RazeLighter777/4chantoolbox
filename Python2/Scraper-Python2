#!/usr/bin/python2.7

## Written by LAMMJohnson
## If something goes wrong, it's your fault so eat shit.

import os, sys, urllib, re, getopt
from time import time, sleep

##Functions
def usage():
    print "Usage: Scraper-Bash [OPTION] <thread url>"
    print "Default OPTIONS: --output ./ --refresh 10"
    print "Bash script to scrape 4chan, part of 4chantoolbox."
    print ""
    print " -o/--output set output dir"
    print " -q/--quiet go silent"
    print " -i/--interval N thread refresh timer"
    print " -h/--help this message"
    print ""
    print "insert <witty comment> here"
    sys.exit(' ')

## Defaults
verbose = True
output = ""
refresh = 10

## Handle URL arg
if len(sys.argv) == 1:
    usage()
else:
    url = sys.argv[len(sys.argv) - 1]

## Handle flags
try:                                
    opts, args = getopt.gnu_getopt(sys.argv, "hqo:t:", ["help", "quiet", "output", "timer"])
except getopt.GetoptError:
    print str(err)
    usage()

for o, a in opts:
    if o == "-q":
        verbose = False
    elif o in ("-h", "--help"):
        usage()
        sys.exit()
    elif o in ("-o", "--output"):
        output = a
    elif o in ("-t", "--timer"):
        refresh = a
    else:
        assert False, "Unhandled Option"

print output

## Main loop
while 1:
    lasttime = time()

    html = urllib.urlopen(url);
    print "Page %s downloaded. Processing images." % url
    images = re.findall('http://images.4chan.org/g/src/\d{13}.(?:png|gif|jpg)', html.read())

    for image in images:
        imagename = re.search('src/(.*$)', image)
        imagename = imagename.group(1)
        fullpath = output + imagename

        if os.path.exists(fullpath):
            print "File \'%s' exists. Skipping." % fullpath
        else:
            print "Getting %s" % image
            u = urllib.urlopen(image)
            localFile = open(fullpath, 'w')
            localFile.write(u.read())
            localFile.close()

    looptime = time() - lasttime;
    lasttime = time();
    if looptime < refresh:
        print "Finished early. Sleeping for %d seconds." % (10 - looptime)
        sleep (10 - looptime)
